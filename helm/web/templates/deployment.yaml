apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.labels.app }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.labels.app }}
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
    spec:
      containers:
      - name: {{ .Values.labels.app }}
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.targetPort }}
            protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "bin/rails db:create && bin/rails db:migrate"]
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: psql
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: psql
              key: POSTGRES_PASSWORD
        - name: DEV_DB_NAME
          valueFrom:
            secretKeyRef:
              name: psql
              key: DEV_DB_NAME
        - name: POSTGRES_HOST
          value: {{ .Values.psql.host }}
        - name: APP_NAME
          value: {{ .Values.labels.app }}
        - name: PGPORT
          value: "{{ .Values.psql.port }}"
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: psql
              key: SECRET_KEY_BASE
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: psql
              key: NEW_RELIC_LICENSE_KEY
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
